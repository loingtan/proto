syntax = "proto3";

package auth;

option go_package = "github.com/loingtan/proto/auth";

import "google/protobuf/timestamp.proto";
import "validate/validate.proto";

service AuthService {
  rpc Login(LoginRequest) returns (LoginResponse);
  rpc Register(RegisterRequest) returns (RegisterResponse);
  rpc ValidateToken(ValidateTokenRequest) returns (ValidateTokenResponse);
  rpc RefreshToken(RefreshTokenRequest) returns (RefreshTokenResponse);
  rpc ListUsers(ListUsersRequest) returns (ListUsersResponse);
  rpc Logout(LogoutRequest) returns (LogoutResponse);
}

message LoginRequest {
  string username = 1 [(validate.rules).string = {min_len: 3, max_len: 50, pattern: "^[a-zA-Z0-9_.-]+$"}];
  string password = 2 [(validate.rules).string = {min_len: 8, max_len: 128}];
}

message LoginResponse {
  string token = 1;
  string refresh_token = 2;
  User user = 3;
  string error = 4;
}

message RegisterRequest {
  string username = 1 [(validate.rules).string = {min_len: 3, max_len: 50, pattern: "^[a-zA-Z0-9_.-]+$"}];
  string password = 2 [(validate.rules).string = {min_len: 8, max_len: 128}];
  repeated string roles = 3 [(validate.rules).repeated = {min_items: 1, max_items: 10, items: {string: {min_len: 1, max_len: 50}}}];
}

message ListUsersRequest {
  int32 page = 1 [(validate.rules).int32 = {gte: 1, lte: 1000}];
  int32 page_size = 2 [(validate.rules).int32 = {gte: 1, lte: 100}];
  string filter = 3 [(validate.rules).string.max_len = 100];
}
message ListUsersResponse {
  repeated User users = 1;
  int32 total = 2; 
  int32 page = 3; 
  int32 page_size = 4; 
  string error = 5; 
}

message RegisterResponse {
  User user = 1;
  string error = 2;
}

message ValidateTokenRequest {
  string token = 1 [(validate.rules).string = {min_len: 1, max_len: 2048}];
}

message ValidateTokenResponse {
  bool valid = 1;
  User user = 2;
  string error = 3;
}

message RefreshTokenRequest {
  string refresh_token = 1 [(validate.rules).string = {min_len: 1, max_len: 2048}];
}

message RefreshTokenResponse {
  string token = 1;
  string refresh_token = 2;
  string error = 3;
}

message LogoutRequest {
  string token = 1 [(validate.rules).string = {min_len: 1, max_len: 2048}];
}

message LogoutResponse {
  bool success = 1;
  string error = 2;
}

message User {
  string id = 1 [(validate.rules).string.uuid = true];
  string username = 2 [(validate.rules).string = {min_len: 3, max_len: 50, pattern: "^[a-zA-Z0-9_.-]+$"}];
  repeated UserRole roles = 3;
  google.protobuf.Timestamp created_at = 4;
  google.protobuf.Timestamp updated_at = 5;
}

message UserRole {
  string id = 1 [(validate.rules).string.uuid = true];
  string role = 2 [(validate.rules).string = {min_len: 1, max_len: 50, pattern: "^[A-Z_]+$"}];
  google.protobuf.Timestamp created_at = 3;
  google.protobuf.Timestamp updated_at = 4;
}