// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.5.1
// - protoc             (unknown)
// source: coupon/v1/coupon.proto

package v1

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.64.0 or later.
const _ = grpc.SupportPackageIsVersion9

const (
	CouponService_GetCoupon_FullMethodName           = "/coupon.CouponService/GetCoupon"
	CouponService_ListCoupons_FullMethodName         = "/coupon.CouponService/ListCoupons"
	CouponService_CreateCoupon_FullMethodName        = "/coupon.CouponService/CreateCoupon"
	CouponService_UpdateCoupon_FullMethodName        = "/coupon.CouponService/UpdateCoupon"
	CouponService_DeleteCoupon_FullMethodName        = "/coupon.CouponService/DeleteCoupon"
	CouponService_ClaimCoupon_FullMethodName         = "/coupon.CouponService/ClaimCoupon"
	CouponService_ReserveCoupon_FullMethodName       = "/coupon.CouponService/ReserveCoupon"
	CouponService_ValidateReservation_FullMethodName = "/coupon.CouponService/ValidateReservation"
	CouponService_ListClaimCoupon_FullMethodName     = "/coupon.CouponService/ListClaimCoupon"
	CouponService_CalculateDiscount_FullMethodName   = "/coupon.CouponService/CalculateDiscount"
)

// CouponServiceClient is the client API for CouponService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type CouponServiceClient interface {
	GetCoupon(ctx context.Context, in *GetCouponRequest, opts ...grpc.CallOption) (*GetCouponResponse, error)
	ListCoupons(ctx context.Context, in *ListCouponsRequest, opts ...grpc.CallOption) (*ListCouponsResponse, error)
	CreateCoupon(ctx context.Context, in *CreateCouponRequest, opts ...grpc.CallOption) (*CreateCouponResponse, error)
	UpdateCoupon(ctx context.Context, in *UpdateCouponRequest, opts ...grpc.CallOption) (*UpdateCouponResponse, error)
	DeleteCoupon(ctx context.Context, in *DeleteCouponRequest, opts ...grpc.CallOption) (*DeleteCouponResponse, error)
	ClaimCoupon(ctx context.Context, in *ClaimCouponRequest, opts ...grpc.CallOption) (*ClaimCouponResponse, error)
	ReserveCoupon(ctx context.Context, in *ReserveCouponRequest, opts ...grpc.CallOption) (*ReserveCouponResponse, error)
	ValidateReservation(ctx context.Context, in *ValidateReservationRequest, opts ...grpc.CallOption) (*ValidateReservationResponse, error)
	ListClaimCoupon(ctx context.Context, in *ListClaimCouponRequest, opts ...grpc.CallOption) (*ListClaimCouponResponse, error)
	CalculateDiscount(ctx context.Context, in *CalculateDiscountRequest, opts ...grpc.CallOption) (*CalculateDiscountResponse, error)
}

type couponServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewCouponServiceClient(cc grpc.ClientConnInterface) CouponServiceClient {
	return &couponServiceClient{cc}
}

func (c *couponServiceClient) GetCoupon(ctx context.Context, in *GetCouponRequest, opts ...grpc.CallOption) (*GetCouponResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(GetCouponResponse)
	err := c.cc.Invoke(ctx, CouponService_GetCoupon_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *couponServiceClient) ListCoupons(ctx context.Context, in *ListCouponsRequest, opts ...grpc.CallOption) (*ListCouponsResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(ListCouponsResponse)
	err := c.cc.Invoke(ctx, CouponService_ListCoupons_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *couponServiceClient) CreateCoupon(ctx context.Context, in *CreateCouponRequest, opts ...grpc.CallOption) (*CreateCouponResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(CreateCouponResponse)
	err := c.cc.Invoke(ctx, CouponService_CreateCoupon_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *couponServiceClient) UpdateCoupon(ctx context.Context, in *UpdateCouponRequest, opts ...grpc.CallOption) (*UpdateCouponResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(UpdateCouponResponse)
	err := c.cc.Invoke(ctx, CouponService_UpdateCoupon_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *couponServiceClient) DeleteCoupon(ctx context.Context, in *DeleteCouponRequest, opts ...grpc.CallOption) (*DeleteCouponResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(DeleteCouponResponse)
	err := c.cc.Invoke(ctx, CouponService_DeleteCoupon_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *couponServiceClient) ClaimCoupon(ctx context.Context, in *ClaimCouponRequest, opts ...grpc.CallOption) (*ClaimCouponResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(ClaimCouponResponse)
	err := c.cc.Invoke(ctx, CouponService_ClaimCoupon_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *couponServiceClient) ReserveCoupon(ctx context.Context, in *ReserveCouponRequest, opts ...grpc.CallOption) (*ReserveCouponResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(ReserveCouponResponse)
	err := c.cc.Invoke(ctx, CouponService_ReserveCoupon_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *couponServiceClient) ValidateReservation(ctx context.Context, in *ValidateReservationRequest, opts ...grpc.CallOption) (*ValidateReservationResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(ValidateReservationResponse)
	err := c.cc.Invoke(ctx, CouponService_ValidateReservation_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *couponServiceClient) ListClaimCoupon(ctx context.Context, in *ListClaimCouponRequest, opts ...grpc.CallOption) (*ListClaimCouponResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(ListClaimCouponResponse)
	err := c.cc.Invoke(ctx, CouponService_ListClaimCoupon_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *couponServiceClient) CalculateDiscount(ctx context.Context, in *CalculateDiscountRequest, opts ...grpc.CallOption) (*CalculateDiscountResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(CalculateDiscountResponse)
	err := c.cc.Invoke(ctx, CouponService_CalculateDiscount_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CouponServiceServer is the server API for CouponService service.
// All implementations must embed UnimplementedCouponServiceServer
// for forward compatibility.
type CouponServiceServer interface {
	GetCoupon(context.Context, *GetCouponRequest) (*GetCouponResponse, error)
	ListCoupons(context.Context, *ListCouponsRequest) (*ListCouponsResponse, error)
	CreateCoupon(context.Context, *CreateCouponRequest) (*CreateCouponResponse, error)
	UpdateCoupon(context.Context, *UpdateCouponRequest) (*UpdateCouponResponse, error)
	DeleteCoupon(context.Context, *DeleteCouponRequest) (*DeleteCouponResponse, error)
	ClaimCoupon(context.Context, *ClaimCouponRequest) (*ClaimCouponResponse, error)
	ReserveCoupon(context.Context, *ReserveCouponRequest) (*ReserveCouponResponse, error)
	ValidateReservation(context.Context, *ValidateReservationRequest) (*ValidateReservationResponse, error)
	ListClaimCoupon(context.Context, *ListClaimCouponRequest) (*ListClaimCouponResponse, error)
	CalculateDiscount(context.Context, *CalculateDiscountRequest) (*CalculateDiscountResponse, error)
	mustEmbedUnimplementedCouponServiceServer()
}

// UnimplementedCouponServiceServer must be embedded to have
// forward compatible implementations.
//
// NOTE: this should be embedded by value instead of pointer to avoid a nil
// pointer dereference when methods are called.
type UnimplementedCouponServiceServer struct{}

func (UnimplementedCouponServiceServer) GetCoupon(context.Context, *GetCouponRequest) (*GetCouponResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCoupon not implemented")
}
func (UnimplementedCouponServiceServer) ListCoupons(context.Context, *ListCouponsRequest) (*ListCouponsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListCoupons not implemented")
}
func (UnimplementedCouponServiceServer) CreateCoupon(context.Context, *CreateCouponRequest) (*CreateCouponResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateCoupon not implemented")
}
func (UnimplementedCouponServiceServer) UpdateCoupon(context.Context, *UpdateCouponRequest) (*UpdateCouponResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateCoupon not implemented")
}
func (UnimplementedCouponServiceServer) DeleteCoupon(context.Context, *DeleteCouponRequest) (*DeleteCouponResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteCoupon not implemented")
}
func (UnimplementedCouponServiceServer) ClaimCoupon(context.Context, *ClaimCouponRequest) (*ClaimCouponResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ClaimCoupon not implemented")
}
func (UnimplementedCouponServiceServer) ReserveCoupon(context.Context, *ReserveCouponRequest) (*ReserveCouponResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReserveCoupon not implemented")
}
func (UnimplementedCouponServiceServer) ValidateReservation(context.Context, *ValidateReservationRequest) (*ValidateReservationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ValidateReservation not implemented")
}
func (UnimplementedCouponServiceServer) ListClaimCoupon(context.Context, *ListClaimCouponRequest) (*ListClaimCouponResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListClaimCoupon not implemented")
}
func (UnimplementedCouponServiceServer) CalculateDiscount(context.Context, *CalculateDiscountRequest) (*CalculateDiscountResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CalculateDiscount not implemented")
}
func (UnimplementedCouponServiceServer) mustEmbedUnimplementedCouponServiceServer() {}
func (UnimplementedCouponServiceServer) testEmbeddedByValue()                       {}

// UnsafeCouponServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to CouponServiceServer will
// result in compilation errors.
type UnsafeCouponServiceServer interface {
	mustEmbedUnimplementedCouponServiceServer()
}

func RegisterCouponServiceServer(s grpc.ServiceRegistrar, srv CouponServiceServer) {
	// If the following call pancis, it indicates UnimplementedCouponServiceServer was
	// embedded by pointer and is nil.  This will cause panics if an
	// unimplemented method is ever invoked, so we test this at initialization
	// time to prevent it from happening at runtime later due to I/O.
	if t, ok := srv.(interface{ testEmbeddedByValue() }); ok {
		t.testEmbeddedByValue()
	}
	s.RegisterService(&CouponService_ServiceDesc, srv)
}

func _CouponService_GetCoupon_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetCouponRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CouponServiceServer).GetCoupon(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CouponService_GetCoupon_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CouponServiceServer).GetCoupon(ctx, req.(*GetCouponRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CouponService_ListCoupons_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListCouponsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CouponServiceServer).ListCoupons(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CouponService_ListCoupons_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CouponServiceServer).ListCoupons(ctx, req.(*ListCouponsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CouponService_CreateCoupon_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateCouponRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CouponServiceServer).CreateCoupon(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CouponService_CreateCoupon_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CouponServiceServer).CreateCoupon(ctx, req.(*CreateCouponRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CouponService_UpdateCoupon_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateCouponRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CouponServiceServer).UpdateCoupon(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CouponService_UpdateCoupon_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CouponServiceServer).UpdateCoupon(ctx, req.(*UpdateCouponRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CouponService_DeleteCoupon_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteCouponRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CouponServiceServer).DeleteCoupon(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CouponService_DeleteCoupon_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CouponServiceServer).DeleteCoupon(ctx, req.(*DeleteCouponRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CouponService_ClaimCoupon_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ClaimCouponRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CouponServiceServer).ClaimCoupon(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CouponService_ClaimCoupon_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CouponServiceServer).ClaimCoupon(ctx, req.(*ClaimCouponRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CouponService_ReserveCoupon_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReserveCouponRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CouponServiceServer).ReserveCoupon(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CouponService_ReserveCoupon_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CouponServiceServer).ReserveCoupon(ctx, req.(*ReserveCouponRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CouponService_ValidateReservation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ValidateReservationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CouponServiceServer).ValidateReservation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CouponService_ValidateReservation_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CouponServiceServer).ValidateReservation(ctx, req.(*ValidateReservationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CouponService_ListClaimCoupon_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListClaimCouponRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CouponServiceServer).ListClaimCoupon(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CouponService_ListClaimCoupon_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CouponServiceServer).ListClaimCoupon(ctx, req.(*ListClaimCouponRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CouponService_CalculateDiscount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CalculateDiscountRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CouponServiceServer).CalculateDiscount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CouponService_CalculateDiscount_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CouponServiceServer).CalculateDiscount(ctx, req.(*CalculateDiscountRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// CouponService_ServiceDesc is the grpc.ServiceDesc for CouponService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var CouponService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "coupon.CouponService",
	HandlerType: (*CouponServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetCoupon",
			Handler:    _CouponService_GetCoupon_Handler,
		},
		{
			MethodName: "ListCoupons",
			Handler:    _CouponService_ListCoupons_Handler,
		},
		{
			MethodName: "CreateCoupon",
			Handler:    _CouponService_CreateCoupon_Handler,
		},
		{
			MethodName: "UpdateCoupon",
			Handler:    _CouponService_UpdateCoupon_Handler,
		},
		{
			MethodName: "DeleteCoupon",
			Handler:    _CouponService_DeleteCoupon_Handler,
		},
		{
			MethodName: "ClaimCoupon",
			Handler:    _CouponService_ClaimCoupon_Handler,
		},
		{
			MethodName: "ReserveCoupon",
			Handler:    _CouponService_ReserveCoupon_Handler,
		},
		{
			MethodName: "ValidateReservation",
			Handler:    _CouponService_ValidateReservation_Handler,
		},
		{
			MethodName: "ListClaimCoupon",
			Handler:    _CouponService_ListClaimCoupon_Handler,
		},
		{
			MethodName: "CalculateDiscount",
			Handler:    _CouponService_CalculateDiscount_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "coupon/v1/coupon.proto",
}
