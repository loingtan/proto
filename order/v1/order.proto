syntax = "proto3";

package Order;

option go_package = "github.com/loingtan/proto/Order";

import "google/protobuf/timestamp.proto";
import "validate/validate.proto";
service OrderService {
  rpc CreateOrder(CreateOrderRequest) returns (CreateOrderResponse);
  rpc GetOrder(GetOrderRequest) returns (GetOrderResponse);
  rpc ListOrders(ListOrdersRequest) returns (ListOrdersResponse);
  rpc UpdateOrderStatus(UpdateOrderStatusRequest) returns (UpdateOrderStatusResponse);
  rpc GetUserOrders(GetUserOrdersRequest) returns (GetUserOrdersResponse);
  rpc GetCouponOrders(GetCouponOrdersRequest) returns (GetCouponOrdersResponse);
}

message CreateOrderRequest {
  string user_id = 1 [(validate.rules).string.uuid = true];
  string coupon_id = 2; // Optional - empty if no coupon selected
  double amount = 4 [(validate.rules).double.gt = 0];
  double discount = 5 [(validate.rules).double.gte = 0];
  string status = 6 [(validate.rules).string = {in: ["PENDING", "CONFIRMED", "PROCESSING", "SHIPPED", "DELIVERED", "CANCELLED", "REFUNDED"]}];
  int32 payment_channel = 7; // Optional payment method/channel
  uint32 merchant_id = 8; // Optional merchant context
}

message CreateOrderResponse {
  Order Order = 1;
  string error = 2;
}

message GetOrderRequest {
  string id = 1 [(validate.rules).string.uuid = true];
}

message GetOrderResponse {
  Order Order = 1;
  string error = 2;
}

message ListOrdersRequest {
  int32 page = 1 [(validate.rules).int32 = {gte: 1, lte: 1000}];
  int32 page_size = 2 [(validate.rules).int32 = {gte: 1, lte: 100}];
  string filter = 3 [(validate.rules).string.max_len = 100];
}

message ListOrdersResponse {
  repeated Order Orders = 1;
  int32 total = 2;
  int32 page = 3;
  int32 page_size = 4;
  string error = 5;
}

message UpdateOrderStatusRequest {
  string id = 1 [(validate.rules).string.uuid = true];
  string status = 2 [(validate.rules).string = {in: ["PENDING", "CONFIRMED", "PROCESSING", "SHIPPED", "DELIVERED", "CANCELLED", "REFUNDED"]}];
}

message UpdateOrderStatusResponse {
  Order Order = 1;
  string error = 2;
}

message GetUserOrdersRequest {
  string user_id = 1 [(validate.rules).string.uuid = true];
  int32 page = 2 [(validate.rules).int32 = {gte: 1, lte: 1000}];
  int32 page_size = 3 [(validate.rules).int32 = {gte: 1, lte: 100}];
}

message GetUserOrdersResponse {
  repeated Order Orders = 1;
  int32 total = 2;
  string error = 3;
}

message GetCouponOrdersRequest {
  string coupon_id = 1 [(validate.rules).string.uuid = true];
  int32 page = 2 [(validate.rules).int32 = {gte: 1, lte: 1000}];
  int32 page_size = 3 [(validate.rules).int32 = {gte: 1, lte: 100}];
}

message GetCouponOrdersResponse {
  repeated Order Orders = 1;
  int32 total = 2;
  string error = 3;
}




message Order {
  string id = 1 [(validate.rules).string.uuid = true];
  string user_id = 2 [(validate.rules).string.uuid = true];
  string coupon_id = 3; // Optional - empty if no coupon used
  double amount = 5 [(validate.rules).double.gt = 0];
  double discount = 6 [(validate.rules).double.gte = 0];
  string status = 7 [(validate.rules).string = {in: ["PENDING", "CONFIRMED", "PROCESSING", "SHIPPED", "DELIVERED", "CANCELLED", "REFUNDED"]}];
  google.protobuf.Timestamp created_at = 8;
  google.protobuf.Timestamp updated_at = 9;
  int32 payment_channel = 10;
  uint32 merchant_id = 11;
}
